<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <sub-flow name="init_common_variables_flow">
        <set-variable variableName="var_lang" value="#[message.inboundProperties.'http.query.params'.lang]" doc:name="Variable for language request param"/>
        <set-variable variableName="var_file_written" value="false" doc:name="Variable for file write status"/>
        <set-variable variableName="var_jms_published" value="false" doc:name="Variable for jms publish status"/>
        <set-variable variableName="var_compressList" value="#[[]]" doc:name="variable for compress list"/>
    </sub-flow>

	<flow name="get_quote_flow">
        <flow-ref name="init_common_variables_flow" doc:name="initialize variables"/>
		<http:request config-ref="HTTP_quotes_from_got_req_config"
			path="/" method="GET" doc:name="Get Quote from GOT via HTTP Rest" />
        <json:validate-schema schemaLocation="${quotes.response.schema}" doc:name="Validate get quote response"/>
		<dw:transform-message doc:name="Transform to qotd json format"
			metadata:id="c0cffca8-c69d-46d2-8099-faa96ebaf90d">
			<dw:input-payload mimeType="application/json" />
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	quote: payload.quote,
	author: payload.character
}]]></dw:set-payload>
			<dw:set-variable variableName="var_quote"><![CDATA[%dw 1.0
%output application/java
---
payload.quote]]></dw:set-variable>
			<dw:set-variable variableName="var_author"><![CDATA[%dw 1.0
%output application/java
---
payload.character]]></dw:set-variable>
		</dw:transform-message>
	</flow>

	<sub-flow name="compress_flow">
        <dw:transform-message doc:name="Compress quotes" metadata:id="071ca266-470f-4844-b0a8-82c66222f495">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	compress: payload.text[0] replace " " with "",
	indexes: payload.text[0] find " ",
	author: flowVars.var_author,
	language: flowVars.var_current_lang
}]]></dw:set-payload>
        </dw:transform-message>
		<logger
			message=" compressed quotes: #[payload.compress]     indexes of whitespace: #[payload.indexes]"
			level="INFO" doc:name="Log compressed quotes" />
		<expression-component doc:name="collect compressed quotes"><![CDATA[flowVars.var_compressList.add(payload)]]></expression-component>
	</sub-flow>
    <sub-flow name="uncompress_message_flow">
        <dw:transform-message doc:name="uncompress message and transform to csv format" metadata:id="665efb1c-81aa-437c-88fa-d9057ec26be5">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/csv separator = " ", header=false, quoteValues=true
---
payload map ((payload01 , indexOfPayload01) -> {
	quotes: uncompress(payload01.compress,payload01.indexes),
	author: payload01.author,
	language: payload01.language
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="uncompressed: #[payload]" level="INFO" doc:name="Log uncompress quotes"/>
    </sub-flow>
    <flow name="jms_publish_compress_quotes_flow">
        <set-payload value="#[flowVars.var_compressList]" doc:name="Set Compress quotes list as Payload"/>
        <json:object-to-json-transformer mimeType="text/json" doc:name="List of quotes to JSON"/>
        <jms:outbound-endpoint topic="${jms.topic}" connector-ref="Active_MQ" doc:name="JMS publish qotd topic"/>
        <expression-component doc:name="set jms published status"><![CDATA[flowVars.var_jms_published=true;]]></expression-component>
    </flow>
</mule>
