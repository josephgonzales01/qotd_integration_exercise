<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">

	<configuration doc:name="Java_qotd.service.Compression">
		<expression-language>
			<import class="qotd.service.Compression" />
			<global-functions>
				def uncompress(text,indices){
				return
				Compression.uncompress(text,indices)
				}
			</global-functions>
		</expression-language>
	</configuration>

	<http:listener-config name="HTTP_Listener_Configuration"
		host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" />

	<http:request-config name="HTTP_quotes_from_got_req_config"
		host="${qoutes.host}" doc:name="HTTP Request Configuration" port="${https.port}"
		basePath="/quotes" protocol="HTTPS" />

	<http:request-config name="HTTP_yandex_translate_req_config"
		protocol="HTTPS" host="${yandex.host}" port="${https.port}"
		doc:name="HTTP Request Configuration" basePath="${yandex.basePath}" />

	<jms:activemq-connector name="Active_MQ"
		specification="1.1" brokerURL="${jms.broker}" validateConnections="true"
		doc:name="Active MQ" password="${jms.password}" username="${jms.user}">
		<reconnect count="5" />
	</jms:activemq-connector>

	<context:property-placeholder location="app-${env}.properties" />

	<choice-exception-strategy name="global_exception_strategy">

		<catch-exception-strategy
			when="#[exception.causedBy(org.mule.module.json.validation.JsonSchemaValidationException)]"
			enableNotifications="false" doc:name="Catch Json Schema validation Exception Strategy">
			<set-payload
				value="&gt;&gt;&gt;&gt;Invalid JSON Response schema: #[&quot;\n&quot; + exception.cause ]"
				doc:name="Exception as payload" />
            <set-property propertyName="http.status" value="422" doc:name="set status 422"/>
		</catch-exception-strategy>
		<catch-exception-strategy doc:name="Catch Compression exception strategy"
			enableNotifications="false" when="#[exception.causedBy(qotd.exception.CompressionException)]">
			<set-payload value="&gt;&gt;&gt;&gt;unhandled exception: #[&quot;\n&quot;+exception]" doc:name="Exception message as payload" />
            <set-property propertyName="http.status" value="422" doc:name="set status 422"/>
		</catch-exception-strategy>
        <catch-exception-strategy doc:name="Catch any other Exception">
            <set-payload value="&gt;&gt;&gt;&gt;Error during compression/uncompression: #[&quot;\n&quot; + exception.cause ]" doc:name="Exception message as payload"/>
            <set-property propertyName="http.status" value="500" doc:name="set status 500"/>
        </catch-exception-strategy>
		
	</choice-exception-strategy>


</mule>
